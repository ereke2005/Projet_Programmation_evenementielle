# Generated by Django 5.2 on 2025-04-08 00:17

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('mentorship_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Élève',
                'verbose_name_plural': 'Élèves',
            },
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='mentorshiprequest',
            name='interest_area',
        ),
        migrations.RemoveField(
            model_name='mentorshiprequest',
            name='preferred_language',
        ),
        migrations.RemoveField(
            model_name='mentorshiprequest',
            name='user',
        ),
        migrations.RemoveField(
            model_name='session',
            name='feedback_score',
        ),
        migrations.RemoveField(
            model_name='session',
            name='mentee',
        ),
        migrations.RemoveField(
            model_name='session',
            name='mentor',
        ),
        migrations.RemoveField(
            model_name='session',
            name='session_datetime',
        ),
        migrations.RemoveField(
            model_name='session',
            name='session_status',
        ),
        migrations.AddField(
            model_name='mentorshiprequest',
            name='interest',
            field=models.CharField(default='DefaultInterest', max_length=255),
        ),
        migrations.AddField(
            model_name='mentorshiprequest',
            name='language',
            field=models.CharField(default='English', max_length=50),
        ),
        migrations.AddField(
            model_name='mentorshiprequest',
            name='notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='session',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='session',
            name='end_time',
            field=models.DateTimeField(default='2025-01-01 12:00'),
        ),
        migrations.AddField(
            model_name='session',
            name='start_time',
            field=models.DateTimeField(default='2024-01-01 12:00'),
        ),
        migrations.AddField(
            model_name='session',
            name='title',
            field=models.CharField(default='Session par défaut', max_length=255),
        ),
        migrations.AlterField(
            model_name='mentorshiprequest',
            name='time_zone',
            field=models.CharField(default='UTC', max_length=50),
        ),
        migrations.CreateModel(
            name='SessionCoaching',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=255)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('description', models.TextField(blank=True, null=True)),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='mentorship_app.mentor')),
                ('students', models.ManyToManyField(related_name='sessions', to='mentorship_app.eleve')),
            ],
            options={
                'verbose_name': 'Session de Coaching',
                'verbose_name_plural': 'Sessions de Coaching',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_mentor', models.BooleanField(default=False)),
                ('is_student', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='Groupes auxquels cet utilisateur appartient.', related_name='custom_user_groups', to='auth.group', verbose_name='groupes')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissions spécifiques pour cet utilisateur.', related_name='custom_user_permissions', to='auth.permission', verbose_name='permissions utilisateur')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='mentor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mentor_profile', to='mentorship_app.user'),
        ),
        migrations.AddField(
            model_name='eleve',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to='mentorship_app.user'),
        ),
    ]
